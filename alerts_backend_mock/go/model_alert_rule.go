/*
 * Oodle Alerts API
 *
 * API of the Oodle Alert management.
 *
 * API version: 0.0.1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// An alert rule is a set of criteria that determine when an alert should fire. It consists of an expression which needs to be evaluated to true, an interval which determines how often the alert rule is evaluated, and a duration over which the expression should be true for an alert to fire. Alert rules are evaluated over their interval, and each alert rule can have zero, one, or any number of alerts firing at a time. The state of the alert rule is determined by its most “severe” alert, which can be one of Normal, Pending, or Firing.
type AlertRule struct {

	// id to identify the alert rule
	Id string `json:"id"`

	// status of the alert rule
	Status string `json:"status"`

	Name string `json:"name"`
	// description about the alert rule.
	Description string `json:"description"`
	// The expression evaluated for the alert rule. Alerting rules allow you to define alert conditions based on Prometheus expression language expressions. Eg:request_latency_seconds:mean5m{job=\"myjob\"} > 0.5
	Expression *interface{} `json:"expression"`
	// represents the elapsed time between two instants as an int64 nanosecond count - max time is 290 years. \"for\" clause causes oodle to wait for a certain duration between first encountering a new expression output vector element and counting an alert as firing for this element. default value of 10 min is used.
	For_ int64 `json:"for,omitempty"`
	// an interval in seconds which determines how often the alert rule is evaluated. default value of 10 min is used.
	Interval int32 `json:"interval,omitempty"`

	Labels *[]Label `json:"labels"`

	Annotations *[]Annotation `json:"annotations"`
}

var AlertRuleNormal = "Normal"
var AlertRulePending = "Pending"
var AlertRuleFiring = "Firing"
